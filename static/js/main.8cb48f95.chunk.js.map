{"version":3,"sources":["components/tile/tile.tsx","components/chessboard/chessboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tile","_ref","number","image","React","createElement","className","style","backgroundImage","concat","horizontalAxis","verticalAxis","pieces","i","push","x","y","p","type","Chessboard","chessboardRef","useRef","activePiece","board","_loop","j","_loop2","undefined","forEach","react_default","a","tile_tile","key","length","onMouseUp","e","onMouseMove","chessboard","current","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","clientX","clientY","position","left","top","movePiece","onMouseDown","element","target","classList","contains","grabPiece","id","ref","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8cb48f95.chunk.js","sourcesContent":["\r\nimport './tile.css'\r\n\r\ninterface props{\r\n    image?: string;\r\n    number : number;\r\n}\r\n\r\nexport default function tile({number , image} : props){\r\n\r\n    \r\n    if(number % 2 === 0 ){\r\n        return(\r\n        <div className=\"tile black-tile\">\r\n           {image && <div style = {{backgroundImage : `url(${image})`}} className = \"chess-piece\"></div>}\r\n     </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n        <div className=\"tile white-tile\"> \r\n        {image && <div style = {{backgroundImage : `url(${image})`}} className = \"chess-piece\"></div>}\r\n       </div>\r\n        )\r\n    }\r\n    \r\n}","import React, { useRef } from \"react\";\r\nimport Tile from '../tile/tile';\r\n\r\nimport './chessboard.css';\r\n\r\nconst horizontalAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\nconst verticalAxis = ['1', '2', '3', '4', '5', '6', '7', '8'];\r\n\r\ninterface Piece {\r\n    image: string\r\n    x: number\r\n    y: number\r\n}\r\n\r\nconst pieces: Piece[] = [];\r\nfor (let i = 0; i < 8; i++) {\r\n    pieces.push({ image: \"assets/images/black-pawn.png\", x: i, y: 6 })\r\n}\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n    pieces.push({ image: \"assets/images/white-pawn.png\", x: i, y: 1 })\r\n}\r\n\r\nfor (let p = 0; p < 2; p++) {\r\n    const type = p === 0 ? 'black' : 'white';\r\n    const y = p === 0 ? 7 : 0; \r\n\r\n    pieces.push({ image: `assets/images/${type}-rook.png`, x: 0, y: y });\r\n    pieces.push({ image: `assets/images/${type}-rook.png`, x: 7, y: y });\r\n    pieces.push({ image: `assets/images/${type}-knight.png`, x: 1, y: y });\r\n    pieces.push({ image: `assets/images/${type}-knight.png`, x: 6, y: y });\r\n    pieces.push({ image: `assets/images/${type}-bishop.png`, x: 2, y: y });\r\n    pieces.push({ image: `assets/images/${type}-bishop.png`, x: 5, y: y });\r\n    pieces.push({ image: `assets/images/${type}-queen.png`, x: 3, y: y });\r\n    pieces.push({ image: `assets/images/${type}-king.png`, x: 4, y: y });\r\n}\r\n\r\n\r\nexport default function Chessboard() {\r\n\r\n    const chessboardRef = useRef<HTMLDivElement>(null);\r\n\r\n    let activePiece : HTMLElement | null = null;\r\n\r\nfunction grabPiece(e: React.MouseEvent) {\r\n    const element = e.target as HTMLElement;\r\n    if (element.classList.contains(\"chess-piece\")) {\r\n        const x = e.clientX - 40;\r\n        const y = e.clientY - 40;\r\n        element.style.position = \"absolute\";\r\n        element.style.left = `${x}px`;\r\n        element.style.top = `${y}px`;\r\n\r\n        activePiece = element;\r\n    }\r\n}\r\nfunction movePiece(e: React.MouseEvent) {\r\n\r\n    const chessboard = chessboardRef.current;\r\n    \r\n    \r\n    if (activePiece && chessboard) {\r\n        const minX = chessboard.offsetLeft - 20;\r\n        const minY = chessboard.offsetTop - 20;\r\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth - 60;\r\n        const maxY = chessboard.offsetTop + chessboard.clientHeight - 65;\r\n        //co nst maxX = chessboard.offset\r\n        const x = e.clientX - 40;\r\n        const y = e.clientY - 40;\r\n        activePiece.style.position = \"absolute\";\r\n        if(x < minX){\r\n            activePiece.style.left = `${minX}px`;\r\n        }\r\n        else if(x > maxX){\r\n            activePiece.style.left = `${maxX}px`;\r\n        }\r\n        else{\r\n            activePiece.style.left = `${x}px`;\r\n        }\r\n\r\n\r\n        if(y < minY){\r\n            activePiece.style.top = `${minY}px`;\r\n        }\r\n        else if(y > maxY){\r\n            activePiece.style.top = `${maxY}px`;\r\n        }\r\n        else{\r\n            activePiece.style.top = `${y}px`;\r\n        }\r\n        \r\n    }\r\n}\r\nfunction dropPiece(e : React.MouseEvent){\r\n    if(activePiece){\r\n        activePiece = null;\r\n    }\r\n}\r\n\r\n\r\n\r\n    let board = [];\r\n    for (let j = verticalAxis.length - 1; j >= 0; j--) {\r\n        for (let i = 0; i < horizontalAxis.length; i++) {\r\n            const number = i + j;\r\n            let image = undefined;\r\n\r\n            pieces.forEach(p => {\r\n                if (p.x === i && p.y === j) {\r\n                    image = p.image;\r\n                }\r\n            })\r\n\r\n            board.push(<Tile key={`${j},${i}`} image={image} number={number} />)\r\n        }\r\n    }\r\n    return( \r\n    <div\r\n    onMouseUp = {e => dropPiece(e)} \r\n    onMouseMove={e => movePiece(e)} \r\n    onMouseDown={e => grabPiece(e)} \r\n    id='chessboard'\r\n    ref = {chessboardRef}>\r\n         {board}\r\n\r\n    </div>\r\n    );\r\n} ","import React from 'react';\r\nimport Chessboard from './components/chessboard/chessboard';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"app\">\r\n      <Chessboard />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}